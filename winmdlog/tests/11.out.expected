// AllJoynAboutDataView.cpp
// Copyright (c) Microsoft Corporation. All rights reserved.
#include "AllJoynAboutDataView.h"

using namespace Microsoft::WRL;
using namespace Windows::Foundation;
using namespace Windows::Globalization;
using namespace Windows::Foundation::Collections;

namespace Windows
{
namespace Devices
{
namespace AllJoyn
{
// Windows::Devices::AllJoyn::IAllJoynAboutDataView
IFACEMETHODIMP AllJoynAboutDataView::get_AJSoftwareVersion(_Out_ HSTRING* /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::AllJoyn::IAllJoynAboutDataView
IFACEMETHODIMP AllJoynAboutDataView::get_AppId(_Out_ GUID* /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::AllJoyn::IAllJoynAboutDataView
IFACEMETHODIMP AllJoynAboutDataView::get_AppName(_Out_ HSTRING* /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::AllJoyn::IAllJoynAboutDataView
IFACEMETHODIMP AllJoynAboutDataView::get_DateOfManufacture(_Outptr_ IReference<DateTime>** /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::AllJoyn::IAllJoynAboutDataView
IFACEMETHODIMP AllJoynAboutDataView::get_DefaultLanguage(_Outptr_ ILanguage** /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::AllJoyn::IAllJoynAboutDataView
IFACEMETHODIMP AllJoynAboutDataView::get_Description(_Out_ HSTRING* /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::AllJoyn::IAllJoynAboutDataView
IFACEMETHODIMP AllJoynAboutDataView::get_DeviceId(_Out_ HSTRING* /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::AllJoyn::IAllJoynAboutDataView
IFACEMETHODIMP AllJoynAboutDataView::get_DeviceName(_Out_ HSTRING* /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::AllJoyn::IAllJoynAboutDataView
IFACEMETHODIMP AllJoynAboutDataView::get_HardwareVersion(_Out_ HSTRING* /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::AllJoyn::IAllJoynAboutDataView
IFACEMETHODIMP AllJoynAboutDataView::get_Manufacturer(_Out_ HSTRING* /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::AllJoyn::IAllJoynAboutDataView
IFACEMETHODIMP AllJoynAboutDataView::get_ModelNumber(_Out_ HSTRING* /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::AllJoyn::IAllJoynAboutDataView
IFACEMETHODIMP AllJoynAboutDataView::get_Properties(_Outptr_ IMapView<HSTRING, IInspectable>** /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::AllJoyn::IAllJoynAboutDataView
IFACEMETHODIMP AllJoynAboutDataView::get_SoftwareVersion(_Out_ HSTRING* /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::AllJoyn::IAllJoynAboutDataView
IFACEMETHODIMP AllJoynAboutDataView::get_Status(_Out_ INT32* /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::AllJoyn::IAllJoynAboutDataView
IFACEMETHODIMP AllJoynAboutDataView::get_SupportUrl(_Outptr_ IUriRuntimeClass** /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::AllJoyn::IAllJoynAboutDataView
IFACEMETHODIMP AllJoynAboutDataView::get_SupportedLanguages(_Outptr_ IVectorView<ILanguage>** /* value */)
{
    return E_NOTIMPL;
}

}
}
}

// AllJoynAboutDataView.h
// Copyright (c) Microsoft Corporation. All rights reserved.
#pragma once

#include <Windows.Devices.h>
#include <Windows.Foundation.h>
#include <Windows.Globalization.h>
#include "AllJoynAboutDataViewFactory.h"
#include <wrl/implements.h>

namespace Windows
{
namespace Devices
{
namespace AllJoyn
{
class AllJoynAboutDataView WrlFinal : public Microsoft::WRL::RuntimeClass<
    Microsoft::WRL::FtmBase,
    Windows::Devices::AllJoyn::IAllJoynAboutDataView
    >
{
    InspectableClass(RuntimeClass_Windows_Devices_AllJoyn_AllJoynAboutDataView, TrustLevel::BaseTrust);

public:
    AllJoynAboutDataView();
    HRESULT RuntimeClassInitialize();

    // Windows::Devices::AllJoyn::IAllJoynAboutDataView
    IFACEMETHOD(get_AJSoftwareVersion)(_Out_ HSTRING* value);
    IFACEMETHOD(get_AppId)(_Out_ GUID* value);
    IFACEMETHOD(get_AppName)(_Out_ HSTRING* value);
    IFACEMETHOD(get_DateOfManufacture)(_Outptr_ Windows::Foundation::IReference<Windows::Foundation::DateTime>** value);
    IFACEMETHOD(get_DefaultLanguage)(_Outptr_ Windows::Globalization::ILanguage** value);
    IFACEMETHOD(get_Description)(_Out_ HSTRING* value);
    IFACEMETHOD(get_DeviceId)(_Out_ HSTRING* value);
    IFACEMETHOD(get_DeviceName)(_Out_ HSTRING* value);
    IFACEMETHOD(get_HardwareVersion)(_Out_ HSTRING* value);
    IFACEMETHOD(get_Manufacturer)(_Out_ HSTRING* value);
    IFACEMETHOD(get_ModelNumber)(_Out_ HSTRING* value);
    IFACEMETHOD(get_Properties)(_Outptr_ Windows::Foundation::Collections::IMapView<HSTRING, IInspectable>** value);
    IFACEMETHOD(get_SoftwareVersion)(_Out_ HSTRING* value);
    IFACEMETHOD(get_Status)(_Out_ INT32* value);
    IFACEMETHOD(get_SupportUrl)(_Outptr_ Windows::Foundation::IUriRuntimeClass** value);
    IFACEMETHOD(get_SupportedLanguages)(_Outptr_ Windows::Foundation::Collections::IVectorView<Windows::Globalization::ILanguage>** value);

private:

};


}
}
}

// AllJoynAboutDataViewFactory.cpp
// Copyright (c) Microsoft Corporation. All rights reserved.
#include "AllJoynAboutDataViewFactory.h"

using namespace Microsoft::WRL;
using namespace Windows::Foundation;
using namespace Windows::Globalization;

namespace Windows
{
namespace Devices
{
namespace AllJoyn
{
// Windows::Devices::AllJoyn::IAllJoynAboutDataViewStatics
IFACEMETHODIMP AllJoynAboutDataViewFactory::GetDataBySessionPortAsync(_In_ HSTRING /* uniqueName */, _In_ IAllJoynBusAttachment* /* busAttachment */, _In_ UINT16 /* sessionPort */, _Outptr_ IAsyncOperation<IAllJoynAboutDataView>** /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::AllJoyn::IAllJoynAboutDataViewStatics
IFACEMETHODIMP AllJoynAboutDataViewFactory::GetDataBySessionPortAsync(_In_ HSTRING /* uniqueName */, _In_ IAllJoynBusAttachment* /* busAttachment */, _In_ UINT16 /* sessionPort */, _In_ ILanguage* /* language */, _Outptr_ IAsyncOperation<IAllJoynAboutDataView>** /* value */)
{
    return E_NOTIMPL;
}

// IActivationFactory
IFACEMETHODIMP AllJoynAboutDataViewFactory::ActivateInstance(_Outptr_ IInspectable** inspectable)
{
    return E_NOTIMPL;
}

}
}
}

// AllJoynAboutDataViewFactory.h
// Copyright (c) Microsoft Corporation. All rights reserved.
#pragma once

#include <Windows.Devices.h>
#include <Windows.Foundation.h>
#include <Windows.Globalization.h>
#include <wrl/implements.h>

namespace Windows
{
namespace Devices
{
namespace AllJoyn
{
class AllJoynAboutDataViewFactory WrlFinal : public Microsoft::WRL::AgileActivationFactory<
    Windows::Devices::AllJoyn::IAllJoynAboutDataViewStatics
    >
{
    InspectableClassStatic(RuntimeClass_Windows_Devices_AllJoyn_AllJoynAboutDataViewFactory, TrustLevel::BaseTrust);

public:
    AllJoynAboutDataViewFactory();
    HRESULT RuntimeClassInitialize();

    // Windows::Devices::AllJoyn::IAllJoynAboutDataViewStatics
    IFACEMETHOD(GetDataBySessionPortAsync)(_In_ HSTRING /* uniqueName */, _In_ Windows::Devices::AllJoyn::IAllJoynBusAttachment* /* busAttachment */, _In_ UINT16 /* sessionPort */, _Outptr_ Windows::Foundation::IAsyncOperation<Windows::Devices::AllJoyn::IAllJoynAboutDataView>** /* value */);
    IFACEMETHOD(GetDataBySessionPortAsync)(_In_ HSTRING /* uniqueName */, _In_ Windows::Devices::AllJoyn::IAllJoynBusAttachment* /* busAttachment */, _In_ UINT16 /* sessionPort */, _In_ Windows::Globalization::ILanguage* /* language */, _Outptr_ Windows::Foundation::IAsyncOperation<Windows::Devices::AllJoyn::IAllJoynAboutDataView>** /* value */);

    // IActivationFactory
    IFACEMETHOD(ActivateInstance)(_Outptr_ IInspectable** inspectable);

private:

};


}
}
}

