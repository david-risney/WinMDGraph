// AdcChannel.cpp
// Copyright (c) Microsoft Corporation. All rights reserved.
#include "AdcChannel.h"

using namespace Microsoft::WRL;
using namespace Windows::Foundation;

namespace Windows
{
namespace Devices
{
namespace Adc
{
// Windows::Devices::Adc::IAdcChannel
IFACEMETHODIMP AdcChannel::ReadValue(_Out_ INT32* /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::Adc::IAdcChannel
IFACEMETHODIMP AdcChannel::ReadRatio(_Out_ DOUBLE* /* value */)
{
    return E_NOTIMPL;
}

// Windows::Devices::Adc::IAdcChannel
IFACEMETHODIMP AdcChannel::get_Controller(_Outptr_ IAdcController** /* value */)
{
    return E_NOTIMPL;
}

// Windows::Foundation::IClosable
IFACEMETHODIMP AdcChannel::Close()
{
    return E_NOTIMPL;
}

}
}
}

// AdcChannel.h
// Copyright (c) Microsoft Corporation. All rights reserved.
#pragma once

#include <Windows.Devices.h>
#include <Windows.Foundation.h>
#include <wrl/implements.h>

namespace Windows
{
namespace Devices
{
namespace Adc
{
class AdcChannel WrlFinal : public Microsoft::WRL::RuntimeClass<
    Microsoft::WRL::FtmBase,
    Windows::Devices::Adc::IAdcChannel,
    Windows::Foundation::IClosable
    >
{
    InspectableClass(RuntimeClass_Windows_Devices_Adc_AdcChannel, TrustLevel::BaseTrust);

public:
    AdcChannel();
    HRESULT RuntimeClassInitialize();

    // Windows::Devices::Adc::IAdcChannel
    IFACEMETHOD(ReadValue)(_Out_ INT32* /* value */);
    IFACEMETHOD(ReadRatio)(_Out_ DOUBLE* /* value */);
    IFACEMETHOD(get_Controller)(_Outptr_ Windows::Devices::Adc::IAdcController** value);

    // Windows::Foundation::IClosable
    IFACEMETHOD(Close)();

private:

};


}
}
}

