// PackageStagingEventArgs.cpp
// Copyright (c) Microsoft Corporation. All rights reserved.
#include "PackageStagingEventArgs.h"

using namespace Microsoft::WRL;


namespace Windows
{
namespace ApplicationModel
{
// Windows::ApplicationModel::IPackageStagingEventArgs
IFACEMETHODIMP PackageStagingEventArgs::get_ActivityId(_Out_ GUID* /* value */)
{
    return E_NOTIMPL;
}

// Windows::ApplicationModel::IPackageStagingEventArgs
IFACEMETHODIMP PackageStagingEventArgs::get_ErrorCode(_Out_ HRESULT* /* value */)
{
    return E_NOTIMPL;
}

// Windows::ApplicationModel::IPackageStagingEventArgs
IFACEMETHODIMP PackageStagingEventArgs::get_IsComplete(_Out_ boolean* /* value */)
{
    return E_NOTIMPL;
}

// Windows::ApplicationModel::IPackageStagingEventArgs
IFACEMETHODIMP PackageStagingEventArgs::get_Package(_Outptr_ IPackage** /* value */)
{
    return E_NOTIMPL;
}

// Windows::ApplicationModel::IPackageStagingEventArgs
IFACEMETHODIMP PackageStagingEventArgs::get_Progress(_Out_ DOUBLE* /* value */)
{
    return E_NOTIMPL;
}

}
}

// PackageStagingEventArgs.h
// Copyright (c) Microsoft Corporation. All rights reserved.
#pragma once

#include <Windows.ApplicationModel.h>
#include <wrl/implements.h>

namespace Windows
{
namespace ApplicationModel
{
class PackageStagingEventArgs WrlFinal : public Microsoft::WRL::RuntimeClass<
    Microsoft::WRL::FtmBase,
    Windows::ApplicationModel::IPackageStagingEventArgs
    >
{
    InspectableClass(RuntimeClass_Windows_ApplicationModel_PackageStagingEventArgs, TrustLevel::BaseTrust);

public:
    PackageStagingEventArgs();
    HRESULT RuntimeClassInitialize();

    // Windows::ApplicationModel::IPackageStagingEventArgs
    IFACEMETHOD(get_ActivityId)(_Out_ GUID* value);
    IFACEMETHOD(get_ErrorCode)(_Out_ HRESULT* value);
    IFACEMETHOD(get_IsComplete)(_Out_ boolean* value);
    IFACEMETHOD(get_Package)(_Outptr_ Windows::ApplicationModel::IPackage** value);
    IFACEMETHOD(get_Progress)(_Out_ DOUBLE* value);

private:

};


}
}

